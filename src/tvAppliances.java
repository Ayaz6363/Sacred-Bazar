
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Satyam
 */
public class tvAppliances extends javax.swing.JFrame {

    /**
     * Creates new form tvAppliances
     */
    private  Socket socket= null; 
	private  DataInputStream input = null; 
	private  DataOutputStream out= null; 
        String username;
        String password;
    public tvAppliances() {
        initComponents();
    }
    public tvAppliances(String nm,String pass)
     {
         initComponents();
         username=nm;
         password=pass;
         jButton10.setText(nm);
     }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel27 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel28 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1040, 684));
        setPreferredSize(new java.awt.Dimension(1040, 684));

        jScrollPane1.setBackground(new java.awt.Color(204, 204, 204));
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setMinimumSize(new java.awt.Dimension(1059, 703));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(1074, 703));

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setMinimumSize(new java.awt.Dimension(1040, 684));
        jPanel1.setPreferredSize(new java.awt.Dimension(1074, 703));
        jPanel1.setLayout(null);

        jTextField1.setText("jTextField1");
        jPanel1.add(jTextField1);
        jTextField1.setBounds(0, 0, 551, 85);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(557, 0, 51, 85);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rsz_1trly.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(612, 0, 74, 77);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/not.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(696, 0, 75, 77);

        jButton2.setText("LOG OUT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(780, 0, 90, 85);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setMinimumSize(new java.awt.Dimension(250, 250));
        jPanel2.setPreferredSize(new java.awt.Dimension(250, 250));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/sonytv.jpg"))); // NOI18N
        jLabel3.setText("jLabel3");

        jButton3.setText("BUY");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("SEE DETAIL");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel27.setText("35522");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton4)))
                .addGap(0, 2, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jLabel27)))
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 120, 250, 250);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setMinimumSize(new java.awt.Dimension(250, 250));
        jPanel3.setPreferredSize(new java.awt.Dimension(250, 250));

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/lgwash.jpg"))); // NOI18N
        jLabel4.setText("jLabel4");

        jButton5.setText("BUY");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("SEE DETAIL");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel28.setText("24225");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 4, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 221, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton6)
                    .addComponent(jLabel28)))
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(260, 120, 250, 250);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setMinimumSize(new java.awt.Dimension(250, 250));
        jPanel4.setPreferredSize(new java.awt.Dimension(250, 250));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fridge.jpg"))); // NOI18N

        jButton7.setText("BUY");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setText("SEE DETAIL");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel29.setText("17500");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jButton7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jButton8)
                .addGap(23, 23, 23))
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton7)
                    .addComponent(jButton8)
                    .addComponent(jLabel29)))
        );

        jPanel1.add(jPanel4);
        jPanel4.setBounds(520, 120, 250, 250);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setMinimumSize(new java.awt.Dimension(250, 250));
        jPanel5.setPreferredSize(new java.awt.Dimension(250, 250));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ac.jpg"))); // NOI18N
        jLabel6.setText("jLabel6");

        jButton9.setText("BUY");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton11.setText("SEE DETAIL");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel30.setText("14999");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel30)
                        .addGap(18, 18, 18)
                        .addComponent(jButton11))
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 27, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton9)
                    .addComponent(jButton11)
                    .addComponent(jLabel30)))
        );

        jPanel1.add(jPanel5);
        jPanel5.setBounds(790, 120, 223, 250);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setMinimumSize(new java.awt.Dimension(250, 250));
        jPanel6.setPreferredSize(new java.awt.Dimension(250, 250));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/kettle.jpg"))); // NOI18N
        jLabel7.setText("jLabel7");

        jButton12.setText("BUY");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("SEE DETAIL");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jLabel34.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel34.setText("2752");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jButton12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton13)))
                .addGap(0, 3, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12)
                    .addComponent(jButton13)
                    .addComponent(jLabel34)))
        );

        jPanel1.add(jPanel6);
        jPanel6.setBounds(10, 420, 250, 250);

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setMinimumSize(new java.awt.Dimension(250, 250));
        jPanel7.setPreferredSize(new java.awt.Dimension(250, 250));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/fprocessor.jpg"))); // NOI18N
        jLabel8.setText("jLabel8");

        jButton14.setText("BUY");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("SEE DETAIL");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel33.setText("5699");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jButton14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel33)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(jButton15)
                .addGap(0, 12, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton14)
                    .addComponent(jButton15)
                    .addComponent(jLabel33)))
        );

        jPanel1.add(jPanel7);
        jPanel7.setBounds(280, 420, 250, 250);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setMinimumSize(new java.awt.Dimension(250, 250));
        jPanel8.setPreferredSize(new java.awt.Dimension(250, 250));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rheater.jpg"))); // NOI18N
        jLabel10.setText("jLabel10");

        jButton18.setText("BUY");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setText("SEE DETAIL");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel31.setText("7999");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jButton18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton19)))
                .addGap(0, 40, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 221, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton18)
                    .addComponent(jButton19)
                    .addComponent(jLabel31)))
        );

        jPanel1.add(jPanel8);
        jPanel8.setBounds(810, 420, 220, 250);

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setMinimumSize(new java.awt.Dimension(250, 250));
        jPanel9.setPreferredSize(new java.awt.Dimension(250, 250));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/wgeyser.jpg"))); // NOI18N

        jButton16.setText("BUY");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText("SEE DETAIL");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel32.setText("10999");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jButton16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton17)))
                .addGap(0, 4, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton16)
                    .addComponent(jButton17)
                    .addComponent(jLabel32)))
        );

        jPanel1.add(jPanel9);
        jPanel9.setBounds(550, 420, 250, 250);

        jLabel11.setText("tvAppliances");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(10, 100, 70, 14);

        jLabel12.setText("sonytv");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(180, 100, 60, 14);

        jLabel13.setText("tvAppliances");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(270, 100, 80, 14);

        jLabel14.setText("washingmachine");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(410, 100, 90, 14);

        jLabel15.setText("tvAppliances");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(530, 100, 70, 14);

        jLabel16.setText("refrigerator");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(700, 100, 60, 14);

        jLabel17.setText("tvAppliances");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(800, 100, 70, 14);

        jLabel18.setText("splitac");
        jPanel1.add(jLabel18);
        jLabel18.setBounds(970, 100, 30, 14);

        jLabel19.setText("tvAppliances");
        jPanel1.add(jLabel19);
        jLabel19.setBounds(20, 400, 70, 14);

        jLabel20.setText("kettle");
        jPanel1.add(jLabel20);
        jLabel20.setBounds(210, 400, 27, 14);

        jLabel21.setText("tvAppliances");
        jPanel1.add(jLabel21);
        jLabel21.setBounds(290, 400, 70, 14);

        jLabel22.setText("foodprocessor");
        jPanel1.add(jLabel22);
        jLabel22.setBounds(440, 400, 80, 14);

        jLabel23.setText("tvAppliances");
        jPanel1.add(jLabel23);
        jLabel23.setBounds(560, 400, 70, 14);

        jLabel24.setText("watergeyser");
        jPanel1.add(jLabel24);
        jLabel24.setBounds(720, 400, 70, 14);

        jLabel25.setText("tvAppliances");
        jPanel1.add(jLabel25);
        jLabel25.setBounds(810, 400, 70, 14);

        jLabel26.setText("roomheater");
        jPanel1.add(jLabel26);
        jLabel26.setBounds(940, 400, 70, 14);

        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton10);
        jButton10.setBounds(880, 10, 150, 70);

        jScrollPane1.setViewportView(jPanel1);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
         String nm=jTextField1.getText();
        String send="search"+" "+nm;
        int flag=0;
        try
		{ 
			socket = new Socket("127.0.0.1", 5000); 
			System.out.println("Connected");
//                        
//                        Scanner sc = new Scanner(System.in);
//                        String str = sc.nextLine();

			// takes input from terminal 
			input = new DataInputStream(socket.getInputStream()); 

			// sends output to the socket 
			out = new DataOutputStream(socket.getOutputStream()); 
		} 
		catch(UnknownHostException u) 
		{ 
			System.out.println(u); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		} 

		// string to read message from input 
		String line = ""; 

		// keep reading until "Over" is input 
		//while (!line.equals("Over")) 
		{ 
                    
			try
			{ 
                            
				//line = input.readLine(); 
                                
				out.writeUTF(send); 
                                line=input.readUTF();
                                line+=username+" "+password+" ";
                                String[] words=line.split("\\s+");
                                if(!(words[0].equals("iteam")))
                                {
                                    
                                    search obj=new search(words);
                                    obj.setVisible(true);
                                       //this.setVisible(false);
                                    
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null, "iteam is not available in inventory");
                                }
			} 
			catch(IOException i) 
			{ 
				System.out.println(i); 
			} 
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        String send="";
        send+="seedetail"+" ";
        send+=jLabel12.getText();
         String nm=jTextField1.getText();
        
        int flag=0;
        try
		{ 
			socket = new Socket("127.0.0.1", 5000); 
			System.out.println("Connected");
//                        
//                        Scanner sc = new Scanner(System.in);
//                        String str = sc.nextLine();

			// takes input from terminal 
			input = new DataInputStream(socket.getInputStream()); 

			// sends output to the socket 
			out = new DataOutputStream(socket.getOutputStream()); 
		} 
		catch(UnknownHostException u) 
		{ 
			System.out.println(u); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		} 

		// string to read message from input 
		String line = ""; 

		// keep reading until "Over" is input 
		//while (!line.equals("Over")) 
		{ 
                    
			try
			{ 
                            
				//line = input.readLine(); 
                                
				out.writeUTF(send); 
                                line=input.readUTF();
                                line+=username+" "+password+" ";
                                String[] words=line.split("\\s+");
                                if(!(words[0].equals("iteam")))
                                {
                                    
                                    search obj=new search(words);
                                    obj.setVisible(true);
                                       //this.setVisible(false);
                                    
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null, line);
                                }
			} 
			catch(IOException i) 
			{ 
				System.out.println(i); 
			} 
    }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String send="";
        send+="seedetail"+" ";
        send+=jLabel14.getText();
         String nm=jTextField1.getText();
        
        int flag=0;
        try
		{ 
			socket = new Socket("127.0.0.1", 5000); 
			System.out.println("Connected");
//                        
//                        Scanner sc = new Scanner(System.in);
//                        String str = sc.nextLine();

			// takes input from terminal 
			input = new DataInputStream(socket.getInputStream()); 

			// sends output to the socket 
			out = new DataOutputStream(socket.getOutputStream()); 
		} 
		catch(UnknownHostException u) 
		{ 
			System.out.println(u); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		} 

		// string to read message from input 
		String line = ""; 

		// keep reading until "Over" is input 
		//while (!line.equals("Over")) 
		{ 
                    
			try
			{ 
                            
				//line = input.readLine(); 
                                
				out.writeUTF(send); 
                                line=input.readUTF();
                                line+=username+" "+password+" ";
                                String[] words=line.split("\\s+");
                                if(!(words[0].equals("iteam")))
                                {
                                    
                                    search obj=new search(words);
                                    obj.setVisible(true);
                                       //this.setVisible(false);
                                    
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null, line);
                                }
			} 
			catch(IOException i) 
			{ 
				System.out.println(i); 
			} 
    }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        String send="";
        send+="seedetail"+" ";
        send+=jLabel16.getText();
         String nm=jTextField1.getText();
        
        int flag=0;
        try
		{ 
			socket = new Socket("127.0.0.1", 5000); 
			System.out.println("Connected");
//                        
//                        Scanner sc = new Scanner(System.in);
//                        String str = sc.nextLine();

			// takes input from terminal 
			input = new DataInputStream(socket.getInputStream()); 

			// sends output to the socket 
			out = new DataOutputStream(socket.getOutputStream()); 
		} 
		catch(UnknownHostException u) 
		{ 
			System.out.println(u); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		} 

		// string to read message from input 
		String line = ""; 

		// keep reading until "Over" is input 
		//while (!line.equals("Over")) 
		{ 
                    
			try
			{ 
                            
				//line = input.readLine(); 
                                
				out.writeUTF(send); 
                                line=input.readUTF();
                                line+=username+" "+password+" ";
                                String[] words=line.split("\\s+");
                                if(!(words[0].equals("iteam")))
                                {
                                    
                                    search obj=new search(words);
                                    obj.setVisible(true);
                                       //this.setVisible(false);
                                    
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null, line);
                                }
			} 
			catch(IOException i) 
			{ 
				System.out.println(i); 
			} 
    }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        String send="";
        send+="seedetail"+" ";
        send+=jLabel18.getText();
         String nm=jTextField1.getText();
        
        int flag=0;
        try
		{ 
			socket = new Socket("127.0.0.1", 5000); 
			System.out.println("Connected");
//                        
//                        Scanner sc = new Scanner(System.in);
//                        String str = sc.nextLine();

			// takes input from terminal 
			input = new DataInputStream(socket.getInputStream()); 

			// sends output to the socket 
			out = new DataOutputStream(socket.getOutputStream()); 
		} 
		catch(UnknownHostException u) 
		{ 
			System.out.println(u); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		} 

		// string to read message from input 
		String line = ""; 

		// keep reading until "Over" is input 
		//while (!line.equals("Over")) 
		{ 
                    
			try
			{ 
                            
				//line = input.readLine(); 
                                
				out.writeUTF(send); 
                                line=input.readUTF();
                                line+=username+" "+password+" ";
                                String[] words=line.split("\\s+");
                                if(!(words[0].equals("iteam")))
                                {
                                    
                                    search obj=new search(words);
                                    obj.setVisible(true);
                                       //this.setVisible(false);
                                    
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null, line);
                                }
			} 
			catch(IOException i) 
			{ 
				System.out.println(i); 
			} 
    }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        String send="";
        send+="seedetail"+" ";
        send+=jLabel20.getText();
         String nm=jTextField1.getText();
        
        int flag=0;
        try
		{ 
			socket = new Socket("127.0.0.1", 5000); 
			System.out.println("Connected");
//                        
//                        Scanner sc = new Scanner(System.in);
//                        String str = sc.nextLine();

			// takes input from terminal 
			input = new DataInputStream(socket.getInputStream()); 

			// sends output to the socket 
			out = new DataOutputStream(socket.getOutputStream()); 
		} 
		catch(UnknownHostException u) 
		{ 
			System.out.println(u); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		} 

		// string to read message from input 
		String line = ""; 

		// keep reading until "Over" is input 
		//while (!line.equals("Over")) 
		{ 
                    
			try
			{ 
                            
				//line = input.readLine(); 
                                
				out.writeUTF(send); 
                                line=input.readUTF();
                                line+=username+" "+password+" ";
                                String[] words=line.split("\\s+");
                                if(!(words[0].equals("iteam")))
                                {
                                    
                                    search obj=new search(words);
                                    obj.setVisible(true);
                                       //this.setVisible(false);
                                    
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null, line);
                                }
			} 
			catch(IOException i) 
			{ 
				System.out.println(i); 
			} 
    }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        String send="";
        send+="seedetail"+" ";
        send+=jLabel22.getText();
         String nm=jTextField1.getText();
        
        int flag=0;
        try
		{ 
			socket = new Socket("127.0.0.1", 5000); 
			System.out.println("Connected");
//                        
//                        Scanner sc = new Scanner(System.in);
//                        String str = sc.nextLine();

			// takes input from terminal 
			input = new DataInputStream(socket.getInputStream()); 

			// sends output to the socket 
			out = new DataOutputStream(socket.getOutputStream()); 
		} 
		catch(UnknownHostException u) 
		{ 
			System.out.println(u); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		} 

		// string to read message from input 
		String line = ""; 

		// keep reading until "Over" is input 
		//while (!line.equals("Over")) 
		{ 
                    
			try
			{ 
                            
				//line = input.readLine(); 
                                
				out.writeUTF(send); 
                                line=input.readUTF();
                                line+=username+" "+password+" ";
                                String[] words=line.split("\\s+");
                                if(!(words[0].equals("iteam")))
                                {
                                    
                                    search obj=new search(words);
                                    obj.setVisible(true);
                                       //this.setVisible(false);
                                    
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null, line);
                                }
			} 
			catch(IOException i) 
			{ 
				System.out.println(i); 
			} 
    }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        String send="";
        send+="seedetail"+" ";
        send+=jLabel24.getText();
         String nm=jTextField1.getText();
        
        int flag=0;
        try
		{ 
			socket = new Socket("127.0.0.1", 5000); 
			System.out.println("Connected");
//                        
//                        Scanner sc = new Scanner(System.in);
//                        String str = sc.nextLine();

			// takes input from terminal 
			input = new DataInputStream(socket.getInputStream()); 

			// sends output to the socket 
			out = new DataOutputStream(socket.getOutputStream()); 
		} 
		catch(UnknownHostException u) 
		{ 
			System.out.println(u); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		} 

		// string to read message from input 
		String line = ""; 

		// keep reading until "Over" is input 
		//while (!line.equals("Over")) 
		{ 
                    
			try
			{ 
                            
				//line = input.readLine(); 
                                
				out.writeUTF(send); 
                                line=input.readUTF();
                                line+=username+" "+password+" ";
                                String[] words=line.split("\\s+");
                                if(!(words[0].equals("iteam")))
                                {
                                    
                                    search obj=new search(words);
                                    obj.setVisible(true);
                                       //this.setVisible(false);
                                    
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null, line);
                                }
			} 
			catch(IOException i) 
			{ 
				System.out.println(i); 
			} 
    }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        String send="";
        send+="seedetail"+" ";
        send+=jLabel26.getText();
         String nm=jTextField1.getText();
        
        int flag=0;
        try
		{ 
			socket = new Socket("127.0.0.1", 5000); 
			System.out.println("Connected");
//                        
//                        Scanner sc = new Scanner(System.in);
//                        String str = sc.nextLine();

			// takes input from terminal 
			input = new DataInputStream(socket.getInputStream()); 

			// sends output to the socket 
			out = new DataOutputStream(socket.getOutputStream()); 
		} 
		catch(UnknownHostException u) 
		{ 
			System.out.println(u); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		} 

		// string to read message from input 
		String line = ""; 

		// keep reading until "Over" is input 
		//while (!line.equals("Over")) 
		{ 
                    
			try
			{ 
                            
				//line = input.readLine(); 
                                
				out.writeUTF(send); 
                                line=input.readUTF();
                                line+=username+" "+password+" ";
                                String[] words=line.split("\\s+");
                                if(!(words[0].equals("iteam")))
                                {
                                    
                                    search obj=new search(words);
                                    obj.setVisible(true);
                                       //this.setVisible(false);
                                    
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null, line);
                                }
			} 
			catch(IOException i) 
			{ 
				System.out.println(i); 
			} 
    }
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         String send="";
        send="buy"+" ";
        send+=jLabel11.getText()+" ";
        send+=jLabel12.getText()+" ";
        send+=username+" ";
        send+=password;
                try
		{ 
			socket = new Socket("127.0.0.1", 5000); 
			System.out.println("Connected");
//                        
//                        Scanner sc = new Scanner(System.in);
//                        String str = sc.nextLine();

			// takes input from terminal 
			input = new DataInputStream(socket.getInputStream()); 

			// sends output to the socket 
			out = new DataOutputStream(socket.getOutputStream()); 
		} 
		catch(UnknownHostException u) 
		{ 
			System.out.println(u); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		} 

		// string to read message from input 
		String line = ""; 

		// keep reading until "Over" is input 
		//while (!line.equals("Over")) 
		{ 
                    
			try
			{ 
                            
				//line = input.readLine(); 
                                
				out.writeUTF(send); 
                                line=input.readUTF();
                                String[] words=line.split("\\s+");
                                if(words[0].equals("iteam"))
                                {
                                   JOptionPane.showMessageDialog(null,line);
                                    
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null, line);
                                }
			} 
			catch(IOException i) 
			{ 
				System.out.println(i); 
			} 
		} 

		// close the connection 
		try
		{ 
			input.close(); 
			out.close(); 
			socket.close(); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		}
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
         String send="";
        send="buy"+" ";
        send+=jLabel13.getText()+" ";
        send+=jLabel14.getText()+" ";
        send+=username+" ";
        send+=password;
                try
		{ 
			socket = new Socket("127.0.0.1", 5000); 
			System.out.println("Connected");
//                        
//                        Scanner sc = new Scanner(System.in);
//                        String str = sc.nextLine();

			// takes input from terminal 
			input = new DataInputStream(socket.getInputStream()); 

			// sends output to the socket 
			out = new DataOutputStream(socket.getOutputStream()); 
		} 
		catch(UnknownHostException u) 
		{ 
			System.out.println(u); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		} 

		// string to read message from input 
		String line = ""; 

		// keep reading until "Over" is input 
		//while (!line.equals("Over")) 
		{ 
                    
			try
			{ 
                            
				//line = input.readLine(); 
                                
				out.writeUTF(send); 
                                line=input.readUTF();
                                String[] words=line.split("\\s+");
                                if(words[0].equals("iteam"))
                                {
                                   JOptionPane.showMessageDialog(null,line);
                                    
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null, line);
                                }
			} 
			catch(IOException i) 
			{ 
				System.out.println(i); 
			} 
		} 

		// close the connection 
		try
		{ 
			input.close(); 
			out.close(); 
			socket.close(); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		}
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
         String send="";
        send="buy"+" ";
        send+=jLabel15.getText()+" ";
        send+=jLabel16.getText()+" ";
        send+=username+" ";
        send+=password;
                try
		{ 
			socket = new Socket("127.0.0.1", 5000); 
			System.out.println("Connected");
//                        
//                        Scanner sc = new Scanner(System.in);
//                        String str = sc.nextLine();

			// takes input from terminal 
			input = new DataInputStream(socket.getInputStream()); 

			// sends output to the socket 
			out = new DataOutputStream(socket.getOutputStream()); 
		} 
		catch(UnknownHostException u) 
		{ 
			System.out.println(u); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		} 

		// string to read message from input 
		String line = ""; 

		// keep reading until "Over" is input 
		//while (!line.equals("Over")) 
		{ 
                    
			try
			{ 
                            
				//line = input.readLine(); 
                                
				out.writeUTF(send); 
                                line=input.readUTF();
                                String[] words=line.split("\\s+");
                                if(words[0].equals("iteam"))
                                {
                                   JOptionPane.showMessageDialog(null,line);
                                    
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null, line);
                                }
			} 
			catch(IOException i) 
			{ 
				System.out.println(i); 
			} 
		} 

		// close the connection 
		try
		{ 
			input.close(); 
			out.close(); 
			socket.close(); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		}
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
         String send="";
        send="buy"+" ";
        send+=jLabel17.getText()+" ";
        send+=jLabel18.getText()+" ";
        send+=username+" ";
        send+=password;
                try
		{ 
			socket = new Socket("127.0.0.1", 5000); 
			System.out.println("Connected");
//                        
//                        Scanner sc = new Scanner(System.in);
//                        String str = sc.nextLine();

			// takes input from terminal 
			input = new DataInputStream(socket.getInputStream()); 

			// sends output to the socket 
			out = new DataOutputStream(socket.getOutputStream()); 
		} 
		catch(UnknownHostException u) 
		{ 
			System.out.println(u); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		} 

		// string to read message from input 
		String line = ""; 

		// keep reading until "Over" is input 
		//while (!line.equals("Over")) 
		{ 
                    
			try
			{ 
                            
				//line = input.readLine(); 
                                
				out.writeUTF(send); 
                                line=input.readUTF();
                                String[] words=line.split("\\s+");
                                if(words[0].equals("iteam"))
                                {
                                   JOptionPane.showMessageDialog(null,line);
                                    
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null, line);
                                }
			} 
			catch(IOException i) 
			{ 
				System.out.println(i); 
			} 
		} 

		// close the connection 
		try
		{ 
			input.close(); 
			out.close(); 
			socket.close(); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		}
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
         String send="";
        send="buy"+" ";
        send+=jLabel19.getText()+" ";
        send+=jLabel20.getText()+" ";
        send+=username+" ";
        send+=password;
                try
		{ 
			socket = new Socket("127.0.0.1", 5000); 
			System.out.println("Connected");
//                        
//                        Scanner sc = new Scanner(System.in);
//                        String str = sc.nextLine();

			// takes input from terminal 
			input = new DataInputStream(socket.getInputStream()); 

			// sends output to the socket 
			out = new DataOutputStream(socket.getOutputStream()); 
		} 
		catch(UnknownHostException u) 
		{ 
			System.out.println(u); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		} 

		// string to read message from input 
		String line = ""; 

		// keep reading until "Over" is input 
		//while (!line.equals("Over")) 
		{ 
                    
			try
			{ 
                            
				//line = input.readLine(); 
                                
				out.writeUTF(send); 
                                line=input.readUTF();
                                String[] words=line.split("\\s+");
                                if(words[0].equals("iteam"))
                                {
                                   JOptionPane.showMessageDialog(null,line);
                                    
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null, line);
                                }
			} 
			catch(IOException i) 
			{ 
				System.out.println(i); 
			} 
		} 

		// close the connection 
		try
		{ 
			input.close(); 
			out.close(); 
			socket.close(); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		}
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
         String send="";
        send="buy"+" ";
        send+=jLabel21.getText()+" ";
        send+=jLabel22.getText()+" ";
        send+=username+" ";
        send+=password;
                try
		{ 
			socket = new Socket("127.0.0.1", 5000); 
			System.out.println("Connected");
//                        
//                        Scanner sc = new Scanner(System.in);
//                        String str = sc.nextLine();

			// takes input from terminal 
			input = new DataInputStream(socket.getInputStream()); 

			// sends output to the socket 
			out = new DataOutputStream(socket.getOutputStream()); 
		} 
		catch(UnknownHostException u) 
		{ 
			System.out.println(u); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		} 

		// string to read message from input 
		String line = ""; 

		// keep reading until "Over" is input 
		//while (!line.equals("Over")) 
		{ 
                    
			try
			{ 
                            
				//line = input.readLine(); 
                                
				out.writeUTF(send); 
                                line=input.readUTF();
                                String[] words=line.split("\\s+");
                                if(words[0].equals("iteam"))
                                {
                                   JOptionPane.showMessageDialog(null,line);
                                    
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null, line);
                                }
			} 
			catch(IOException i) 
			{ 
				System.out.println(i); 
			} 
		} 

		// close the connection 
		try
		{ 
			input.close(); 
			out.close(); 
			socket.close(); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		}
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
         String send="";
        send="buy"+" ";
        send+=jLabel23.getText()+" ";
        send+=jLabel24.getText()+" ";
        send+=username+" ";
        send+=password;
                try
		{ 
			socket = new Socket("127.0.0.1", 5000); 
			System.out.println("Connected");
//                        
//                        Scanner sc = new Scanner(System.in);
//                        String str = sc.nextLine();

			// takes input from terminal 
			input = new DataInputStream(socket.getInputStream()); 

			// sends output to the socket 
			out = new DataOutputStream(socket.getOutputStream()); 
		} 
		catch(UnknownHostException u) 
		{ 
			System.out.println(u); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		} 

		// string to read message from input 
		String line = ""; 

		// keep reading until "Over" is input 
		//while (!line.equals("Over")) 
		{ 
                    
			try
			{ 
                            
				//line = input.readLine(); 
                                
				out.writeUTF(send); 
                                line=input.readUTF();
                                String[] words=line.split("\\s+");
                                if(words[0].equals("iteam"))
                                {
                                   JOptionPane.showMessageDialog(null,line);
                                    
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null, line);
                                }
			} 
			catch(IOException i) 
			{ 
				System.out.println(i); 
			} 
		} 

		// close the connection 
		try
		{ 
			input.close(); 
			out.close(); 
			socket.close(); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		}
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
         String send="";
        send="buy"+" ";
        send+=jLabel25.getText()+" ";
        send+=jLabel26.getText()+" ";
        send+=username+" ";
        send+=password;
                try
		{ 
			socket = new Socket("127.0.0.1", 5000); 
			System.out.println("Connected");
//                        
//                        Scanner sc = new Scanner(System.in);
//                        String str = sc.nextLine();

			// takes input from terminal 
			input = new DataInputStream(socket.getInputStream()); 

			// sends output to the socket 
			out = new DataOutputStream(socket.getOutputStream()); 
		} 
		catch(UnknownHostException u) 
		{ 
			System.out.println(u); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		} 

		// string to read message from input 
		String line = ""; 

		// keep reading until "Over" is input 
		//while (!line.equals("Over")) 
		{ 
                    
			try
			{ 
                            
				//line = input.readLine(); 
                                
				out.writeUTF(send); 
                                line=input.readUTF();
                                String[] words=line.split("\\s+");
                                if(words[0].equals("iteam"))
                                {
                                   JOptionPane.showMessageDialog(null,line);
                                    
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null, line);
                                }
			} 
			catch(IOException i) 
			{ 
				System.out.println(i); 
			} 
		} 

		// close the connection 
		try
		{ 
			input.close(); 
			out.close(); 
			socket.close(); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		}
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        new login().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
         String send="";
        send+="userdetail"+" ";
        send+=username+" "+password;
         
        
        int flag=0;
        try
		{ 
			socket = new Socket("127.0.0.1", 5000); 
			System.out.println("Connected");
//                        
//                        Scanner sc = new Scanner(System.in);
//                        String str = sc.nextLine();

			// takes input from terminal 
			input = new DataInputStream(socket.getInputStream()); 

			// sends output to the socket 
			out = new DataOutputStream(socket.getOutputStream()); 
		} 
		catch(UnknownHostException u) 
		{ 
			System.out.println(u); 
		} 
		catch(IOException i) 
		{ 
			System.out.println(i); 
		} 

		// string to read message from input 
		String line = ""; 

		// keep reading until "Over" is input 
		//while (!line.equals("Over")) 
		{ 
                    
			try
			{ 
                            
				//line = input.readLine(); 
                                
				out.writeUTF(send); 
                                line=input.readUTF();
                                //line+=username+" "+password+" ";
                                String[] words=line.split("\\n+");
                                if(!(words[0].equals("iteam")))
                                {
                                    
                                    userdetail obj=new userdetail(words);
                                    obj.setVisible(true);
                                       //this.setVisible(false);
                                    
                                }
                                else
                                {
                                    JOptionPane.showMessageDialog(null, line);
                                }
			} 
			catch(IOException i) 
			{ 
				System.out.println(i); 
			} 
    }
    }//GEN-LAST:event_jButton10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(tvAppliances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(tvAppliances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(tvAppliances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(tvAppliances.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new tvAppliances().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
